  # - name: Get block device from lvm-block-device file created by terraform
  #   shell: cat "{{ base_path }}/lvm-block-device"
  #   register: block_device

- name: Set SM download URL
  set_fact:
    manager_contracts: "{{ sm_url }}"
  when: manager_contracts is undefined
  tags: contracts

- name: Crash if no SM ABIs URL provided
  fail:
    msg: manager_contracts is undefined
  when: manager_contracts is undefined
  tags: contracts

- name: Set IMA download URL
  set_fact:
    ima_contracts: "{{ ima_url }}"
  when: ima_contracts is undefined
  tags: contracts

- name: Crash if no IMA ABIs URL provided
  fail:
    msg: ima_contracts is undefined
  when: ima_contracts is undefined
  tags: contracts

- name: Download contracts
  get_url:
    url: "{{ manager_contracts }}"
    dest: "{{ base_path }}/manager.json"
    mode: 0644
    force: true
  tags: contracts

- name: Set sgx url
  set_fact:
    sgx_url: "https://{{ hostvars['sgx0'].ansible_host }}:1026"
  when: sgx_url is not defined or sgx_url == ''

- name: Set env options
  set_fact:
    env_options: |
      ENDPOINT="{{ endpoint }}"
      IMA_ENDPOINT="{{ ima_endpoint }}"
      CONTAINER_CONFIGS_STREAM="{{ container_configs_stream }}"
      FILEBEAT_HOST="{{ filebeat_host }}"
      MANAGER_CONTRACTS_ABI_URL="{{ manager_contracts }}"
      IMA_CONTRACTS_ABI_URL="{{ ima_contracts }}"
      CONTAINER_CONFIGS_DIR="{{ container_configs_dir }}"
      DOCKER_LVMPY_STREAM="{{ docker_lvmpy_stream }}"
      DISK_MOUNTPOINT="{{ block_device }}"
      SGX_SERVER_URL="{{ sgx_url }}"
      TG_API_KEY="{{ tg_api_key }}"
      TG_CHAT_ID="{{ tg_chat_id }}"
      MONITORING_CONTAINERS="{{ monitoring_containers }}"
      DEFAULT_GAS_PRICE_WEI="{{ default_gas_price_wei }}"
      ENV_TYPE="{{ env_type }}"
      DISABLE_IMA="{{ disable_ima }}"

  when: sync_node is not defined or sync_node != True
  tags: env

- name: Set env options sync node
  set_fact:
    env_options: |
      CONTAINER_CONFIGS_STREAM="{{ container_configs_stream }}"
      CONTAINER_CONFIGS_DIR="{{ container_configs_dir }}"
      ENDPOINT={{ endpoint }}
      ENFORCE_BTRFS='True'
      DOCKER_LVMPY_STREAM="{{ docker_lvmpy_stream }}"
      ENV_TYPE="{{ env_type }}"
      SCHAIN_NAME="{{ schain_name }}"
      MANAGER_CONTRACTS_ABI_URL={{ manager_contracts }}
      IMA_CONTRACTS_ABI_URL={{ ima_contracts }}
      DISK_MOUNTPOINT={{ block_device }}
  when: sync_node is defined and sync_node == True

- name: Show env
  debug:
    msg: "{{ env_options }}"

- name: Save new init-env
  copy:
    content: "{{ env_options }}"
    dest: "{{ base_path }}/init-env"
